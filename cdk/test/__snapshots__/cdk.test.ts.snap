// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test 1`] = `
Object {
  "Description": "Remote SWE Agents stack (uksb-lv52f92xel)",
  "Outputs": Object {
    "SlackBoltEndpointUrl89D2B06F": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "SlackBoltApiFA4A2047",
          "ApiEndpoint",
        ],
      },
    },
    "StorageBucketName37AA483C": Object {
      "Value": Object {
        "Ref": "StorageImageBucket99BA9550",
      },
    },
    "StorageTableNameB6E3E5D6": Object {
      "Value": Object {
        "Ref": "StorageHistory251A3AE8",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsservicecanonicalubuntuserver2404stablecurrentamd64hvmebsgp3amiidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/canonical/ubuntu/server/24.04/stable/current/amd64/hvm/ebs-gp3/ami-id",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "EC2GarbageCollectorHandler4E42AD35": Object {
      "DependsOn": Array [
        "EC2GarbageCollectorHandlerServiceRole3E1396FE",
      ],
      "Properties": Object {
        "Architecture": "arm64",
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REDACTED",
        },
        "Environment": Object {
          "Variables": Object {
            "EXPIRATION_IN_DAYS": "1",
            "IMAGE_RECIPE_NAME": Object {
              "Fn::GetAtt": [
                "WorkerImageBuilderImagePipelineV2ImageRecipe351515D4",
                "Name",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "EC2GarbageCollectorHandlerServiceRole3E1396FE",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EC2GarbageCollectorHandlerServiceRole3E1396FE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EC2GarbageCollectorHandlerServiceRoleDefaultPolicy1FE51FB9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:DeleteSnapshot",
                "ec2:DeregisterImage",
                "ec2:DescribeImages",
                "ec2:DescribeInstances",
                "ec2:TerminateInstances",
                "imagebuilder:DeleteImage",
                "imagebuilder:GetImage",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2GarbageCollectorHandlerServiceRoleDefaultPolicy1FE51FB9",
        "Roles": Array [
          Object {
            "Ref": "EC2GarbageCollectorHandlerServiceRole3E1396FE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EC2GarbageCollectorScheduleF6CD97DD": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(2 hours)",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "EC2GarbageCollectorHandler4E42AD35",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EC2GarbageCollectorScheduleAllowEventRuleTestMainStackEC2GarbageCollectorHandler347502ED890054F4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "EC2GarbageCollectorHandler4E42AD35",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "EC2GarbageCollectorScheduleF6CD97DD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`
